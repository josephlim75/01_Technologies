## Installing Python PassLib

    pip install passlib

## Hashing Password
    cat /etc/shadow |grep test
    
    mkpasswd --method=SHA-512 testing
    
    cat /etc/login.defs |grep ENCRYPT_METHOD
    # This variable is deprecated. You should use ENCRYPT_METHOD.
    ENCRYPT_METHOD SHA512
    # Only used if ENCRYPT_METHOD is set to SHA256 or SHA512.   
    
    python -c "from passlib.hash import sha512_crypt; print sha512_crypt.encrypt('<password>')"
    
    # python
    >>> import crypt
    >>> crypt.crypt('This is my Password', '$6$somereallyniceandbigrandomsalt$')
    >>> '$69LxCegsnIwI'
    # python
    >>> import crypt
    >>> crypt.crypt('thisismypassword', '$6$Som3S@lt$')
    
    >>> # import the hash algorithm
    >>> from passlib.hash import sha512_crypt
    >>> # generate new salt, and hash a password
    >>> hash = sha512_crypt.encrypt("password")
    >>> hash
    
    python -c "from passlib.hash import sha512_crypt; import getpass; print sha512_crypt.encrypt(getpass.getpass())"
    
    >>> # import the hash algorithm
    >>> from passlib.hash import pbkdf2_sha256

    >>> # generate new salt, and hash a password
    >>> hash = pbkdf2_sha256.hash("toomanysecrets")
    >>> hash
    '$pbkdf2-sha256$29000$N2YMIWQsBWBMae09x1jrPQ$1t8iyB2A.WF/Z5JZv.lfCIhXXN33N23OSgQYThBYRfk'

    >>> # verifying the password
    >>> pbkdf2_sha256.verify("toomanysecrets", hash)
    True
    >>> pbkdf2_sha256.verify("joshua", hash)
    False    
     
## Python code to hash password
    #!/usr/bin/env python3

    # Because OSX doesn't have mkpasswd...

    # Based on https://stackoverflow.com/a/17992126/117471
    # python3 -c "from passlib.hash import sha512_crypt; print(sha512_crypt.encrypt(input()))" <<< bruno  # NOQA

    # Usage:
    #
    # $ ./mkpasswd.py
    # Password:
    # $6$rounds=656000$pfFmQISGcjWHOCxW$rBptiSK.tqSPnUiq6KiSHzz6LvvW/x1SjkkWFwxWB9Dt75NLNBs0N3OyGV4K5ejjBs/u.o3jtigvUKbmmwVQP.
    #
    # $ PROCESS_TIME=1 ./mkpasswd.py
    # Password:
    # $6$rounds=656000$e0OGrad82DBrUo9T$ldqtOdN54gmXI6nb0D.Y5mm5ih.LIQm/Ep/bkNL76.3hE65FqXA9wyZ.M5YOrv6dSvwhPAktXGJ6LJT0Fgd4x.
    # 656000 rounds in 1.008705 seconds of cpu time
    #
    # $ ROUNDS=1280000 PROCESS_TIME=1 ./mkpasswd.py <<< bruno
    # $6$rounds=1280000$QO5FSyw5rQpiY6PI$0zRMJ4RzCbH61XxIdpsUm/79.VZ13Mm9TBN9GvJwt1LI1U5FVzakrLya5VJsXlTou3p5ZeWmo29bIUjubRuc31
    # 1280000 rounds in 1.9206560000000001 seconds of cpu time

    import os
    import sys
    import time
    from getpass import getpass
    from passlib.hash import sha512_crypt

    rounds = os.environ.get('ROUNDS')
    if not rounds:
        rounds = sha512_crypt.default_rounds

    passwd = input() if not sys.stdin.isatty() else getpass()

    proc = sha512_crypt.using(rounds=rounds)
    start = time.process_time()
    out = proc.encrypt(passwd)
    end = time.process_time()

    print(out)

    if os.environ.get('PROCESS_TIME'):
        print('{} rounds in {} seconds of cpu time'.format(rounds, end-start))